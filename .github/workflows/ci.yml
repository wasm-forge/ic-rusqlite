name: Build check with SQLite compilation from source

on:
  [push]

env:
  CARGO_TERM_COLOR: always
  TERM: xterm-256color

jobs:

  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x64
#          - os: ubuntu-latest
#            arch: arm64
          - os: macos-latest
            arch: x64
          - os: macos-latest
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}

      - name: Install dfx
        uses: dfinity/setup-dfx@main

      - name: Confirm dfx installation
        run: dfx --version

      - name: Download WASI-SDK and wasi2ic
        run: |
          ./prepare.sh -y
          export WASI_SDK_PATH=`./prepare.sh --sdk`
          echo "WASI_SDK_PATH=$WASI_SDK_PATH" >> $GITHUB_ENV
          echo "$WASI_SDK_PATH/bin" >> $GITHUB_PATH
          
      - name: Check clang install
        run: |
          echo `which clang`
          clang --version

      - name: Check WASI_SDK_PATH
        run: |
          echo WASI_SDK_PATH...
          echo $WASI_SDK_PATH
          echo ...

      - name: Test Build backend with feature compile_sqlite
        run: |
          cd examples/backend
          cargo build --release --target wasm32-wasip1 --no-default-features --features compile_sqlite
          wasi2ic target/wasm32-wasip1/release/backend.wasm target/wasm32-wasip1/release/backend_nowasi.wasm
          dfx canister install --mode reinstall --wasm target/wasm32-wasip1/release/backend_nowasi.wasm -y backend
          ./test.sh
          echo "Success!"
          
